#include <iostream>
#include <cmath>
#include <string>

using namespace std;

// Функция для преобразования числа с плавающей точкой в двоичное представление
string decimalToBinary(double num) {
    string binary = "";

    // Целая часть
    int integerPart = (int)num;
    while (integerPart > 0) {
        binary = to_string(integerPart % 2) + binary;
        integerPart /= 2;
    }

    // Если целая часть была 0, добавляем "0"
    if (binary.empty()) {
        binary = "0";
    }

    binary += ".";

    // Дробная часть
    double fractionalPart = num - (int)num;
    for (int i = 0; i < 8; ++i) {  // Ограничим количество знаков
        fractionalPart *= 2;
        int digit = (int)fractionalPart;
        binary += to_string(digit);
        fractionalPart -= digit;
    }

    return binary;
}

// Функция для преобразования двоичного числа в десятичное
double binaryToDecimal(string binary) {
    size_t pointPos = binary.find('.');
    string integerPart = binary.substr(0, pointPos);
    string fractionalPart = binary.substr(pointPos + 1);

    double result = 0;

    // Целая часть
    int power = 0;
    for (int i = integerPart.size() - 1; i >= 0; --i) {
        if (integerPart[i] == '1') {
            result += pow(2, power);
        }
        ++power;
    }

    // Дробная часть
    power = -1;
    for (size_t i = 0; i < fractionalPart.size(); ++i) {
        if (fractionalPart[i] == '1') {
            result += pow(2, power);
        }
        --power;
    }

    return result;
}

// Функция для преобразования шестнадцатеричного числа в десятичное
unsigned int hexToDecimal(const string& hex) {
    unsigned int decimal = 0;
    for (size_t i = 0; i < hex.length(); ++i) {
        char c = hex[i];
        decimal *= 16;
        if (c >= '0' && c <= '9') {
            decimal += c - '0';
        } else if (c >= 'A' && c <= 'F') {
            decimal += c - 'A' + 10;
        }
    }
    return decimal;
}

// Функция для преобразования десятичного числа в шестнадцатеричное
string decimalToHex(int decimal) {
    string hex = "";
    if (decimal == 0) {
        hex = "0";
    }
    while (decimal > 0) {
        int rem = decimal % 16;
        if (rem < 10) {
            hex = char(rem + '0') + hex;
        } else {
            hex = char(rem - 10 + 'A') + hex;
        }
        decimal /= 16;
    }
    return hex;
}

int main() {
    // Заданные десятичные числа
    double a = 12.75;
    double b = 67.125;
    double c = 6.1;
    double d = 7.55;
    double e = 9.125;
    double f = 90.15;
    double g = 10.25;
    double h = 25;

    // Преобразование в двоичную систему
    cout << "12.75 in binary: " << decimalToBinary(a) << endl;
    cout << "67.125 in binary: " << decimalToBinary(b) << endl;
    cout << "6.1 in binary: " << decimalToBinary(c) << endl;
    cout << "7.55 in binary: " << decimalToBinary(d) << endl;
    cout << "9.125 in binary: " << decimalToBinary(e) << endl;

    // Операции с десятичными числами
    double result1 = a + b;
    double result2 = c * d - e;
    double result3 = f - g + h;

    cout << "12.75 + 67.125 = " << result1 << endl;
    cout << "6.1 * 7.55 - 9.125 = " << result2 << endl;
    cout << "90.15 - 10.25 + 25 = " << result3 << endl;

    // Шестнадцатеричные числа
    string hex1 = "EEFA7";
    string hex2 = "ASA"; // Невалидное, но пусть будет
    string hex3 = "55A";
    string hex4 = "DA13";
    string hex5 = "1F3";
    string hex6 = "20";
    string hex7 = "E2C";

    // Преобразуем шестнадцатеричные числа в десятичные
    unsigned int dec1 = hexToDecimal(hex1);
    unsigned int dec2 = hexToDecimal(hex2);  // ASA невалидно
    unsigned int dec3 = hexToDecimal(hex3);
    unsigned int dec4 = hexToDecimal(hex4);
    unsigned int dec5 = hexToDecimal(hex5);
    unsigned int dec6 = hexToDecimal(hex6);
    unsigned int dec7 = hexToDecimal(hex7);

    cout << "EEFA7 (hex) = " << dec1 << " (decimal)" << endl;
    cout << "DA13 (hex) = " << dec4 << " (decimal)" << endl;
    cout << "1F3 (hex) = " << dec5 << " (decimal)" << endl;
    cout << "20 (hex) = " << dec6 << " (decimal)" << endl;

    // Арифметика с шестнадцатеричными числами
    double result4 = dec1 - dec2 * dec3; // Невалидное hex2
    double result5 = dec4 + dec5 * dec6 - dec7;
    cout << "EEFA7 - ASA * 55.A = " << result4 << endl;
    cout << "DA13 + 1F3 * 20 - E2.C = " << result5 << endl;

    return 0;
}
